#!/bin/bash

## SHOPS Docksal package, v1.0
##
## @author Anton Trokhymenko antroxim@gmail.com
##
## Docksal custom command rebuild script
## Syncs DB from Pantheon environment, @see PANTHEON_ENV setting below
## Runs composer, drush cim, drush updb, drush cr
## Builds theme @see scripts/build_theme.sh
##
## TODO: Add ability to force new Pantheon backup to be create for latest DB sync
##
## Usage: fin rebuild


# Trapping CTRL-C
trap ctrl_c INT
trap ctrl_c SIGINT
trap ctrl_c SIGTERM
# trap ctrl-c and call ctrl_c()
function ctrl_c() {
    echo-red "\n Canceled, deleting DB dump if any"
    rm -f $PROJECT_ROOT/db/database.sql.gz
    echo-red "Good bye."
    exit $?
}

# Paths and environment settings
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
MAIN_THEME_PATH="${DOCROOT_PATH}/themes/${THEME_NAME}"
THEME_PATH_INSIDE_CONTAINER="/var/www/${DOCROOT}/themes/${THEME_NAME}"

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

# Helper functions for console output
echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

#-------------------------- Execution --------------------------------

# Stack initialization
echo -e "${green_bg} Step 1 ${NC}${green} Initializing stack...${NC}"
if [[ $DOCKER_RUNNING == "true" ]]; then
	fin reset -f
else
	fin up
fi
echo "Waiting 15s for container to start...";
sleep 15

# Site initialization
echo -e "${green_bg} Step 2 ${NC}${green} Initializing site...${NC}"
# This runs inside cli using http://docs.docksal.io/en/v1.4.0/fin/custom-commands/#executing-commands-inside-cli

# We nee do catch error if any
set +e

fin ps

echo-yellow "Current user..."
echo "$USER"

echo-yellow "Create dbs..."
fin db create sportbaza
fin db create tooll
fin db create winsport
echo-green "Done.\n"

echo-yellow "Import dbs..."
fin db import $PROJECT_ROOT/db/default_sportbaza.sql --db=sportbaza --db-user=user --db-password=user
fin db import $PROJECT_ROOT/db/default_tooll.sql --db=tooll --db-user=user --db-password=user
fin db import $PROJECT_ROOT/db/default_winsport.sql --db=winsport --db-user=user --db-password=user
echo-green "\n"

# Running composer
echo-yellow "Running composer install"
cd $PROJECT_ROOT
fin exec composer install
echo-green "Done.\n"

# Running Drush commands
echo-yellow "Running drush cim, drush updb, drush cr"
echo-yellow " > sportbaza"
cd $DOCROOT_PATH
fin drush updb -y --uri=sb.shop.docksal
fin drush cim -y --uri=sb.shop.docksal
fin drush cr --uri=sb.shop.docksal
echo-yellow " > tooll"
fin drush updb -y --uri=tl.shop.docksal
fin drush cim -y --uri=tl.shop.docksal
fin drush cr --uri=tl.shop.docksal
echo-yellow " > winsport"
fin drush updb -y --uri=win.shop.docksal
fin drush cim -y --uri=win.shop.docksal
fin drush cr --uri=win.shop.docksal
echo-green "Done.\n"

## Building theme
#echo-yellow "Running gulp tasks in theme ${MAIN_THEME}"
#fin gulp build

echo-green " <<<<<<< Rebuild is complete >>>>>>> "

echo-green " You can open: http://sp.${VIRTUAL_HOST}${NC} "
echo-green "               http://win.${VIRTUAL_HOST}${NC} "
echo-green "               http://tl.${VIRTUAL_HOST}${NC} "
echo


#-------------------------- END: Execution --------------------------------
