#!/bin/bash

## SHOPS Docksal package, v1.0
##
## @author Ivan Berezhnov <ivan.berezhnov@icloud.com>
##
## Docksal custom command rebuild script
## Syncs DB from Host environment.
## Runs composer, drush cim, drush updb, drush cr
## Builds theme @see fin gulp
##
## Usage: fin rebuild


# Trapping CTRL-C
trap ctrl_c INT
trap ctrl_c SIGINT
trap ctrl_c SIGTERM
# trap ctrl-c and call ctrl_c()
function ctrl_c() {
    echo-red "\n Canceled, deleting DB dump if any"
    rm -f $PROJECT_ROOT/db/database.sql.gz
    echo-red "Good bye."
    exit $?
}

# Paths and environment settings
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
MAIN_THEME_PATH="${DOCROOT_PATH}/themes/${THEME_NAME}"
THEME_PATH_INSIDE_CONTAINER="/var/www/${DOCROOT}/themes/${THEME_NAME}"
URL_SB="sb.${VIRTUAL_HOST}"
URL_TL="tl.${VIRTUAL_HOST}"
URL_WIN="win.${VIRTUAL_HOST}"

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

# Helper functions for console output
echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

# Stack initialization
echo -e "${green_bg} Step 1 ${NC}${green} Initializing stack...${NC}"
if [[ $DOCKER_RUNNING == "true" ]]; then
	fin reset -f
else
	fin up
fi
echo "Waiting 10s for container to start...";
sleep 10

# Site initialization
echo -e "${green_bg} Step 2 ${NC}${green} Initializing site...${NC}"
# This runs inside cli using http://docs.docksal.io/en/v1.4.0/fin/custom-commands/#executing-commands-inside-cli

# We nee do catch error if any
set +e

# Running composer
echo-yellow "Running composer install"
cd $PROJECT_ROOT
fin exec composer install
echo-green "Done.\n"

echo-yellow "Configuration file for multi-site..."
echo "<?php" > $DOCROOT_PATH/sites/sites.php
echo " " >> $DOCROOT_PATH/sites/sites.php
echo "\$sites['${URL_SB}'] = 'sportbaza';" >> $DOCROOT_PATH/sites/sites.php
echo "\$sites['${URL_TL}'] = 'tooll';" >> $DOCROOT_PATH/sites/sites.php
echo "\$sites['${URL_WIN}'] = 'winsport';" >> $DOCROOT_PATH/sites/sites.php
echo " " >> $DOCROOT_PATH/sites/sites.php
rm -rf $DOCROOT_PATH/sites/default
cat $DOCROOT_PATH/sites/sites.php
echo-green "Done.\n"

echo-yellow "Create dbs..."
fin drush sql-create -y --uri=$URL_SB
sleep 2
fin drush sql-create -y --uri=$URL_TL
sleep 2
fin drush sql-create -y --uri=$URL_WIN
sleep 2
echo ''
fin db ls
echo-green "Done.\n"

echo-yellow "Import dbs..."
fin db import $PROJECT_ROOT/db/default_sportbaza.sql --db=sportbaza --db-user=root --db-password=root
sleep 5
fin db import $PROJECT_ROOT/db/default_tooll.sql --db=tooll --db-user=root --db-password=root
sleep 5
fin db import $PROJECT_ROOT/db/default_winsport.sql --db=winsport --db-user=root --db-password=root
sleep 5
echo-green "\n"

# Abort if anything fails
set -e

# Running Drush commands
echo-yellow "Running drush cim, drush updb, drush cr"
echo-yellow " > sportbaza"
cd $DOCROOT_PATH
fin drush updb -y --uri=$URL_SB
fin drush cim -y --uri=$URL_SB
fin drush cr --uri=$URL_SB
echo-yellow " > tooll"
fin drush updb -y --uri=$URL_TL
fin drush cim -y --uri=$URL_TL
fin drush cr --uri=$URL_TL
echo-yellow " > winsport"
fin drush updb -y --uri=$URL_WIN
fin drush cim -y --uri=$URL_WIN
fin drush cr --uri=$URL_WIN
echo-green "Done.\n"

## Building theme
echo-yellow "Running gulp tasks in theme ${MAIN_THEME}"
#fin gulp build

# Site initialization
echo -e "${green_bg} Step 3 ${NC}${green} Test: sites running...${NC}"

# Abort if anything fails
set -e

# Debug mode switch
if [[ "${DEBUG}" != "" ]]; then
    set -x
fi

echo "Testing..."
curl -sL -I http://${URL_SB} | grep "HTTP/1.1 200 OK"
#curl -sL http://${URL_SB} | grep "My Drupal 8 Site"

curl -sL -I http://${URL_TL} | grep "HTTP/1.1 200 OK"
#curl -sL http://${URL_TL} | grep "My Drupal 8 Site"

curl -sL -I http://${URL_WIN} | grep "HTTP/1.1 200 OK"
#curl -sL http://${URL_WIN} | grep "My Drupal 8 Site"

echo -e "${green_bg} Step 4 ${NC}${green} Init build is complete...${NC}"

echo-green " http://${URL_SB}${NC} "
echo-green " http://${URL_TL}${NC} "
echo-green " http://${URL_WIN}${NC} "
